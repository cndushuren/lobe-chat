name: Sync Releases Docker Image

permissions:
  contents: write
  issues: write
  actions: write

on:
  schedule:
    - cron: '10 */1 * * *' # every hours
  workflow_dispatch: # 手动触发

jobs:
  sync_latest_from_upstream:
    name: Sync latest commits from upstream repo
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.fork }}
    outputs:
      latest_commit: ${{ steps.sync.outputs.commit_sha }}
      
    steps:
      - uses: actions/checkout@v4

      - name: Clean issue notice
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issues'
          labels: '🚨 Sync Fail'

      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          upstream_sync_repo: lobehub/lobe-chat
          upstream_sync_branch: main
          target_sync_branch: main
          target_repo_token: ${{ secrets.GITHUB_TOKEN }} # automatically generated, no need to set
          test_mode: false

      - name: Sync check
        if: failure()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-issue'
          title: '🚨 同步失败 | Sync Fail'
          labels: '🚨 Sync Fail'
          body: |
            Due to a change in the workflow file of the [LobeChat][lobechat] upstream repository, GitHub has automatically suspended the scheduled automatic update. You need to manually sync your fork. Please refer to the detailed [Tutorial][tutorial-en-US] for instructions.

            由于 [LobeChat][lobechat] 上游仓库的 workflow 文件变更，导致 GitHub 自动暂停了本次自动更新，你需要手动 Sync Fork 一次，请查看 [详细教程][tutorial-zh-CN]

            ![](https://github-production-user-asset-6210df.s3.amazonaws.com/17870709/273954625-df80c890-0822-4ac2-95e6-c990785cbed5.png)

            [lobechat]: https://github.com/lobehub/lobe-chat
            [tutorial-zh-CN]: https://github.com/lobehub/lobe-chat/wiki/Upstream-Sync.zh-CN
            [tutorial-en-US]: https://github.com/lobehub/lobe-chat/wiki/Upstream-Sync

  sync-releases:
    runs-on: ubuntu-latest
    needs: sync_latest_from_upstream
    steps:
    - name: Checkout this repository
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.sync_latest_from_upstream.outputs.latest_commit }}

    - name: Fetch latest release from upstream
      id: fetch-latest-release
      run: |
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/lobehub/lobe-chat/releases/latest)
        TAG_NAME=$(echo $LATEST_RELEASE | jq -r .tag_name)
        RELEASE_NAME=$(echo $LATEST_RELEASE | jq -r .name)
        RELEASE_BODY=$(echo $LATEST_RELEASE | jq -r .body)
        echo "::set-output name=tag_name::$TAG_NAME"
        echo "::set-output name=release_name::$RELEASE_NAME"
        echo "::set-output name=release_body::$(echo -e "$RELEASE_BODY")"

    - name: Fetch latest release from this repository
      id: fetch-current-release
      run: |
        CURRENT_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
        CURRENT_TAG_NAME=$(echo $CURRENT_RELEASE | jq -r .tag_name)
        echo "::set-output name=tag_name::$CURRENT_TAG_NAME"
      continue-on-error: true # 如果没有发布过release，则忽略错误

    - name: Compare versions
      id: compare-versions
      run: |
        if [ "${{ steps.fetch-latest-release.outputs.tag_name }}" != "${{ steps.fetch-current-release.outputs.tag_name }}" ]; then
          echo "New release found."
          echo "::set-output name=release_created::true"
        else
          echo "No new release found."
          echo "::set-output name=release_created::false"
        fi

    - name: Create release
      id: create-release
      if: steps.fetch-latest-release.outputs.tag_name != steps.fetch-current-release.outputs.tag_name
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.fetch-latest-release.outputs.tag_name }}
        release_name: ${{ steps.fetch-latest-release.outputs.release_name }}
        body: ${{ steps.fetch-latest-release.outputs.release_body }}
        draft: false
        prerelease: false

    outputs:
      release_created: ${{ steps.compare-versions.outputs.release_created }}
      latest_tag: ${{ steps.fetch-latest-release.outputs.tag_name }}
      latest_commit: ${{ needs.sync_latest_from_upstream.outputs.latest_commit }}

  publish-docker-image:
    runs-on: ubuntu-latest
    needs: sync-releases
    if: needs.sync-releases.outputs.release_created == 'true'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.sync-releases.outputs.latest_commit }}
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: lizhz/lobe-chat
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.sync-releases.outputs.latest_tag }}
          labels: |
            org.opencontainers.image.version=${{ needs.sync-releases.outputs.latest_tag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
